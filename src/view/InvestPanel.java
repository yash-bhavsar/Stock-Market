package view;/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collector;
import java.util.stream.Collectors;

import controller.IStockMarketController;
import model.Stock;

/**
 * @author ojaspatwardhan
 */
public class InvestPanel extends javax.swing.JPanel {

  private List<Stock> stockList;
  private Map<String, Integer> weights;
  private IStockMarketController stockMarketController;

  /**
   * Creates new form InvestPanel
   */
  public InvestPanel(IStockMarketController stockMarketController) {
    initComponents();
    this.stockMarketController = stockMarketController;
    stockList = new ArrayList<>();
    weights = new HashMap<>();
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT
   * modify this code. The content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">
  private void initComponents() {

    investPortfolioNumberLabel = new javax.swing.JLabel();
    investPortfolioField = new javax.swing.JTextField();
    investDateLabel = new javax.swing.JLabel();
    investDateField = new javax.swing.JTextField();
    amountToInvestLabel = new javax.swing.JLabel();
    amountToinvesttextField = new javax.swing.JTextField();
    investBtn = new javax.swing.JButton();
    weightsLabel = new javax.swing.JLabel();
    tickersComboBox = new javax.swing.JComboBox<>();
    weightsTextField = new javax.swing.JTextField();
    customWeightsBtn = new javax.swing.JButton();
    equalWeightsBtn = new javax.swing.JButton();
    updateWeightsBtn = new javax.swing.JButton();
    resultLabel = new javax.swing.JLabel();

    investPortfolioNumberLabel.setText("Please enter the portfolio number.");

    investPortfolioField.setText("");

    investDateLabel.setText("Please enter the date (yyyy-mm-dd).");

    investDateField.setText("");

    amountToInvestLabel.setText("Please enter the amount you would like to invest.");

    amountToinvesttextField.setText("");

    investBtn.setText("Invest");

    weightsLabel.setText("Select Ticker.");

    tickersComboBox.setModel(new javax.swing.DefaultComboBoxModel<>());

    weightsTextField.setText("Enter weight");

    customWeightsBtn.setText("Execute with custom weights");

    equalWeightsBtn.setText("Execute using equal weights");

    updateWeightsBtn.setText("Update Weight");

    investDateField.addFocusListener(new FocusListener() {
      @Override
      public void focusGained(FocusEvent focusEvent) {

      }

      @Override
      public void focusLost(FocusEvent focusEvent) {
        getStocks(focusEvent);
      }
    });

    updateWeightsBtn.addActionListener(new ActionListener() {
      @Override
      public void actionPerformed(ActionEvent actionEvent) {
        updateWeights(actionEvent);
      }
    });

    customWeightsBtn.addActionListener(new ActionListener() {
      @Override
      public void actionPerformed(ActionEvent actionEvent) {
        invest(actionEvent, true);
      }
    });

    equalWeightsBtn.addActionListener(new ActionListener() {
      @Override
      public void actionPerformed(ActionEvent actionEvent) {
        invest(actionEvent, false);
      }
    });

    tickersComboBox.addFocusListener(new FocusListener() {
      @Override
      public void focusGained(FocusEvent focusEvent) {
        resultLabel.setText("");
      }

      @Override
      public void focusLost(FocusEvent focusEvent) {

      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(investBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                            .addContainerGap()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(investPortfolioField)
                                                    .addComponent(investDateField)
                                                    .addGroup(layout.createSequentialGroup()
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                    .addComponent(investPortfolioNumberLabel)
                                                                    .addComponent(investDateLabel)
                                                                    .addComponent(amountToInvestLabel)
                                                                    .addComponent(resultLabel))
                                                            .addGap(0, 416, Short.MAX_VALUE))
                                                    .addComponent(amountToinvesttextField)))
                                    .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(customWeightsBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                                                    .addGroup(layout.createSequentialGroup()
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                                    .addComponent(tickersComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                                            .addContainerGap()
                                                                            .addComponent(weightsLabel)))
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                            .addComponent(weightsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGap(18, 18, 18)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(equalWeightsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(updateWeightsBtn))
                                            .addGap(0, 0, Short.MAX_VALUE)))
                            .addContainerGap())
    );
    layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                            .addComponent(investPortfolioNumberLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(investPortfolioField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(investDateLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(investDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(amountToInvestLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(amountToinvesttextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(weightsLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tickersComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(weightsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(updateWeightsBtn))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(customWeightsBtn)
                                    .addComponent(equalWeightsBtn))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 140, Short.MAX_VALUE)
                            .addComponent(resultLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 140, Short.MAX_VALUE)
                            .addComponent(investBtn)
                            .addContainerGap())
    );
  }// </editor-fold>

  private void getStocks(FocusEvent l) {
    tickersComboBox.removeAllItems();
    String pNumber = investPortfolioField.getText();
    String date = investDateField.getText();
    try {
      int pn = Integer.parseInt(pNumber);
      SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
      Date date1 = dateFormat.parse(date);
      if (pn < 0) {
        this.resultLabel.setText("Portfolio number cannot be negative");
        return;
      } else if (date1.after(new Date())) {
        this.resultLabel.setText("Future dates are not allowed.");
        return;
      }
      stockList = this.stockMarketController.viewComposition(pn, date);
      for (Stock stock : stockList) {
        tickersComboBox.addItem(stock.getTicker());
      }
    } catch (NumberFormatException ne) {
      resultLabel.setText("Enter a valid portfolio number.");
    } catch (ParseException e) {
      resultLabel.setText("Enter valid date of format (yyyy-MM-dd).");
    }
  }

  private void updateWeights(ActionEvent actionEvent) {
    resultLabel.setText("");
    String ticker = (String) tickersComboBox.getSelectedItem();
    String tickerWeight = weightsTextField.getText();
    int tWeight = Integer.parseInt(tickerWeight);
    if (tWeight < 0) {
      resultLabel.setText("Weight cannot be negative");
    } else {
      weights.put(ticker, tWeight);
      resultLabel.setText("Weight updated.");
    }
  }

  private void invest(ActionEvent actionEvent, boolean custom) {
    String pNumber = investPortfolioField.getText();
    String date = investDateField.getText();
    String investmentAmount = amountToinvesttextField.getText();
    int pn;
    double amount;
    try {
      pn = Integer.parseInt(pNumber);
      amount = Double.parseDouble(investmentAmount);
      SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
      Date date1 = dateFormat.parse(date);
      if (custom) {
        if (weights.entrySet().stream().mapToInt(Map.Entry::getValue).sum() != 100) {
          resultLabel.setText("Weights sum must be 100.");
          return;
        }
        String response;
        boolean flag = true;
        for (Map.Entry<String, Integer> entry : weights.entrySet()) {
          double investAmount = (entry.getValue() / 100.0) * amount;
          response = this.stockMarketController.buyStockByAmount(entry.getKey(), investAmount, date, pn, 0);
          if (!response.trim().equals("pass")) {
            flag = false;
          }
        }
        if (flag) {
          resultLabel.setText("Investment successful.");
        }
      } else {
        String response;
        boolean flag = true;
        for (Map.Entry<String, Integer> entry : weights.entrySet()) {
          double investAmount = (100.0 / weights.size()) * amount;
          response = this.stockMarketController.buyStockByAmount(entry.getKey(), investAmount, date, pn, 0);
          if (!response.trim().equals("pass")) {
            flag = false;
          }
        }
        if (flag) {
          resultLabel.setText("Investment successful.");
        }
      }
    } catch (NumberFormatException e) {
      resultLabel.setText("Enter a valid number for amount");
    } catch (IllegalArgumentException ie) {
      resultLabel.setText(ie.getMessage());
    } catch (ParseException pe) {
      resultLabel.setText("Enter valid date of format (yyyy-MM-dd).");
    }
  }


  // Variables declaration - do not modify
  private javax.swing.JLabel amountToInvestLabel;
  private javax.swing.JTextField amountToinvesttextField;
  private javax.swing.JButton customWeightsBtn;
  private javax.swing.JButton equalWeightsBtn;
  private javax.swing.JButton investBtn;
  private javax.swing.JTextField investDateField;
  private javax.swing.JLabel investDateLabel;
  private javax.swing.JTextField investPortfolioField;
  private javax.swing.JLabel investPortfolioNumberLabel;
  private javax.swing.JButton updateWeightsBtn;
  private javax.swing.JComboBox<String> tickersComboBox;
  private javax.swing.JLabel weightsLabel;
  private javax.swing.JTextField weightsTextField;
  private javax.swing.JLabel resultLabel;
  // End of variables declaration
}